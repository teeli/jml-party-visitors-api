service: jmlparty-api
frameworkVersion: 3.38.0
useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  memorySize: 512
  timeout: 29
  versionFunctions: false
  endpointType: REGIONAL
  deploymentBucket:
    blockPublicAccess: true
  iamRoleStatements:
    - Effect: Allow
      Action: ssm:GetParameter*
      Resource:
        - arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/${self:service}/${self:provider.stage}/google-auth/*

plugins:
  - serverless-offline
  - serverless-esbuild
  - serverless-domain-manager

custom:
  esbuild:
    bundle: true
    minify: false
  apiPath:
    production: api.jml.party
    other: api-${self:provider.stage}.jml.party
  customDomain:
    domainName: ${self:custom.apiPath.${self:provider.stage}, self:custom.apiPath.other}
    certificateName: '*.jml.party'
    stage: ${self:provider.stage}
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: true

functions:
  visitors:
    handler: src/functions/visitors.handler
    events:
      - http:
          path: visitors
          method: get
          cors:
            origin:
              - https://jml.party
              - https://*.jml.party
            headers: '*'
            cacheControl: 'max-age=300, s-maxage=300, proxy-revalidate'
    environment:
      SHEET_ID: 1FaS50t80xGUNjXrDJ3hgSSzcusQ311RMF60vvPolt4U
      GOOGLE_AUTH_TYPE: /${self:service}/${self:provider.stage}/google-auth/type
      GOOGLE_AUTH_PROJECT_ID: /${self:service}/${self:provider.stage}/google-auth/project_id
      GOOGLE_AUTH_PRIVATE_KEY_ID: /${self:service}/${self:provider.stage}/google-auth/private_key_id
      GOOGLE_AUTH_PRIVATE_KEY: /${self:service}/${self:provider.stage}/google-auth/private_key
      GOOGLE_AUTH_CLIENT_EMAIL: /${self:service}/${self:provider.stage}/google-auth/client_email
      GOOGLE_AUTH_CLIENT_ID: /${self:service}/${self:provider.stage}/google-auth/client_id

resources:
  Resources:
    GoogleAuthPrivateKeyIdSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/private_key_id
        Value: ${file(.config/google-auth-${self:provider.stage}.json):private_key_id}
        Type: String
    GoogleAuthTypeSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/type
        Value: ${file(.config/google-auth-${self:provider.stage}.json):type}
        Type: String
    GoogleAuthProjectIdSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/project_id
        Value: ${file(.config/google-auth-${self:provider.stage}.json):project_id}
        Type: String
    GoogleAuthPrivateKeySsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/private_key
        Value: ${file(.config/google-auth-${self:provider.stage}.json):private_key}
        Type: String
    GoogleAuthClientEmailSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/client_email
        Value: ${file(.config/google-auth-${self:provider.stage}.json):client_email}
        Type: String
    GoogleAuthClientIdSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/google-auth/client_id
        Value: ${file(.config/google-auth-${self:provider.stage}.json):client_id}
        Type: String
